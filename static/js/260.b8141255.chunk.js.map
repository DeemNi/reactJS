{"version":3,"file":"static/js/260.b8141255.chunk.js","mappings":"wMACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,2B,SCW5I,EATmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAAeC,UAC7BH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAKK,SAAEN,EAAMS,QAGhC,ECCA,EARgB,SAACT,GACf,OACEG,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAgBC,SAAEN,EAAMU,WAG9C,E,iDCaMC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,eAAlBD,EAbL,SAACZ,GACnB,OACEc,EAAAA,EAAAA,MAAA,QAAMC,SAAUf,EAAMgB,aAAaV,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUV,KAAM,cAAeW,YAAa,yBAA0BC,SAAU,EAACC,EAAAA,EAAAA,GAAiB,GAAIC,EAAAA,QAE1HpB,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,qBAIhB,IAqCA,EAjCgB,SAACN,GAOf,IAAKA,EAAMwB,OACT,OAAOrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAQ,CAACjB,GAAI,WAGvB,IAAIkB,EAAgB1B,EAAM2B,YAAYC,YAAYC,KAAI,SAACC,GAAM,OAC3D3B,EAAAA,EAAAA,KAAC4B,EAAU,CAACtB,KAAMqB,EAAOrB,KAAMP,GAAI4B,EAAO5B,IAAM,IAG9C8B,EAAiBhC,EAAM2B,YAAYM,aAAaJ,KAAI,SAACnB,GAAO,OAC9DP,EAAAA,EAAAA,KAAC+B,EAAO,CAACxB,QAASA,EAAQA,SAAW,IAGvC,OACEI,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAAA,QAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAqBC,SAAEoB,KACvCvB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAiBC,SAAE0B,KAEnC7B,EAAAA,EAAAA,KAAA,OAAAG,UAEEH,EAAAA,EAAAA,KAACQ,EAAgB,CAACI,SAxBR,SAACoB,GACfnC,EAAMoC,QAAQD,EAAOE,YACvB,QA2BF,E,oBCnCA,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACC,GACrB,MAAO,CACLb,YAAaa,EAAMb,YAEvB,IAEyB,SAACc,GACxB,MAAO,CACLL,QAAS,SAACC,GACRI,GAASC,EAAAA,EAAAA,GAAaL,GACxB,EAEJ,IAIEM,EAAAA,EAFF,CAGEC,E","sources":["webpack://react-learning01/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItems/DialogItem.jsx","components/Dialogs/DialogItems/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogItemContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__UFwYo\",\"dialogsItems\":\"Dialogs_dialogsItems__aVGby\",\"active\":\"Dialogs_active__xEgxy\",\"messages\":\"Dialogs_messages__Dbkwi\"};","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={classes.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;","// import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return(\r\n    <div>\r\n      <div className={classes.message}>{props.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport DialogItem from \"./DialogItems/DialogItem\";\r\nimport Message from \"./DialogItems/Message\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../Common/FormController/FormsController\";\r\n\r\nconst dialogsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name={'messageBody'} placeholder={'Type your message here'} validate={[maxLengthCreator(5), required]} />\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({ form: 'dialogsForm' })(dialogsForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let onSendMes = (values) => {\r\n    props.sendMes(values.messageBody);\r\n  }\r\n\r\n\r\n  if (!props.isAuth) {\r\n    return <Navigate to={\"/login\"} />\r\n  }\r\n\r\n  let dialogElement = props.dialogsPage.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} id={dialog.id} />\r\n  ));\r\n\r\n  let messageElement = props.dialogsPage.messagesData.map((message) => (\r\n    <Message message={message.message} />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.dialogsItems}>{dialogElement}</div>\r\n      <div className={classes.messages}>{messageElement}</div>\r\n\r\n      <div>\r\n\r\n        <DialogsFormRedux onSubmit={onSendMes} />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { addMessageAC } from \"../../redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/AuthReducer\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMes: (messageBody) => {\r\n      dispatch(addMessageAC(messageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","_jsx","className","classes","children","NavLink","to","name","message","DialogsFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","maxLengthCreator","required","isAuth","Navigate","dialogElement","dialogsPage","dialogsData","map","dialog","DialogItem","messageElement","messagesData","Message","values","sendMes","messageBody","compose","connect","state","dispatch","addMessageAC","withAuthRedirect","Dialogs"],"sourceRoot":""}